version: '3.8'

services:
  # Servidor web Nginx - Actúa como proxy inverso
  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    build:
      context: .
      dockerfile: .deploy/nginx.Dockerfile
    ports:
      - "${NGINX_PORT}:80"
      - "${NGINX_SSL_PORT}:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - laravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Aplicación Laravel con Octane (Swoole)
  app:
    container_name: ${APP_CONTAINER_NAME}
    build:
      context: .
      dockerfile: .deploy/app.Dockerfile
      args:
        - APP_ENV=${APP_ENV}
        - APP_KEY=${APP_KEY}
        - APP_DEBUG=${APP_DEBUG}
        - APP_URL=${APP_URL}
        - DB_CONNECTION=${DB_CONNECTION}
        - DB_HOST=${DB_HOST}
        - DB_PORT=${DB_PORT}
        - DB_DATABASE=${DB_DATABASE}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
        - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./:/var/www/html
      - ./storage/logs/php:/var/log/php
    environment:
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - APP_TIMEZONE=${APP_TIMEZONE}
      - APP_LOCALE=${APP_LOCALE}
      - APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CACHE_DRIVER=${CACHE_DRIVER}
      - SESSION_DRIVER=${SESSION_DRIVER}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
      - SESSION_LIFETIME=${SESSION_LIFETIME}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT}
      - PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME}
      - PHP_UPLOAD_MAX_FILESIZE=${PHP_UPLOAD_MAX_FILESIZE}
      - PHP_POST_MAX_SIZE=${PHP_POST_MAX_SIZE}
      - RUN_MIGRATIONS=${RUN_MIGRATIONS}
      - RUN_SEEDERS=${RUN_SEEDERS}
      - OCTANE_SERVER=swoole
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    networks:
      - laravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Base de datos MySQL/MariaDB
  db:
    container_name: ${DB_CONTAINER_NAME}
    image: mariadb:10.11-jammy
    ports:
      - "${DB_EXTERNAL_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST}
    volumes:
      - ${DB_VOLUME_NAME}:/var/lib/mysql
    networks:
      - laravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis para caché, colas y sesiones
  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_VOLUME_NAME}:/data
    networks:
      - laravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

# Redes
networks:
  laravel-network:
    name: ${DOCKER_NETWORK}
    driver: bridge

# Volúmenes persistentes
volumes:
  registros_db_data:
    name: ${DB_VOLUME_NAME}
    driver: local
  registros_redis_data:
    name: ${REDIS_VOLUME_NAME}
    driver: local