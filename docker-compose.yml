version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: .deploy/Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION:-8.2}
        - APP_ENV=${APP_ENV:-production}
        - APP_DEBUG=${APP_DEBUG:-false}
        - APP_TIMEZONE=${APP_TIMEZONE:-America/Bogota}
        - DB_HOST=${DB_HOST:-db}
        - DB_PORT=${DB_PORT:-3306}
        - DB_DATABASE=${DB_DATABASE}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
        - APP_LOCALE=${APP_LOCALE:-es}
        - APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE:-es}
        - APP_URL=${APP_URL}
        - APP_KEY=${APP_KEY}
        - REDIS_HOST=${REDIS_HOST:-redis}
        - REDIS_PORT=${REDIS_PORT:-6379}
        - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
        - CACHE_DRIVER=${CACHE_DRIVER:-redis}
        - SESSION_DRIVER=${SESSION_DRIVER:-redis}
        - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
    container_name: ${APP_CONTAINER_NAME:-registros_app}
    ports:
      - "${APP_PORT:-9090}:9090"
    environment:
      - LARAVEL_PATH=/var/www/html
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    networks:
      - app-network
    volumes:
      - ./storage:/var/www/html/storage
      - ./.deploy/config:/var/www/html/.deploy/config
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: ${DB_CONTAINER_NAME:-registros_db}
    ports:
      # Solo exponer este puerto si realmente necesitas acceso externo a la BD
      - "${DB_EXTERNAL_PORT:-3310}:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST:-%}
    command: --default-authentication-plugin=mysql_native_password
             --character-set-server=utf8mb4
             --collation-server=utf8mb4_unicode_ci
             --innodb-buffer-pool-size=512M
             --max-connections=1000
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_HEALTHCHECK_USER:-root}", "-p${DB_HEALTHCHECK_PASSWORD}"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: ${REDIS_CONTAINER_NAME:-registros_redis}
    ports:
      - "${REDIS_EXTERNAL_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-null} --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    name: ${DB_VOLUME_NAME:-registros_db_data}
  redis-data:
    name: ${REDIS_VOLUME_NAME:-registros_redis_data}


    # hola