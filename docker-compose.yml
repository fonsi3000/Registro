version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: .deploy/config/app.Dockerfile
      args:
        PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
        PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
        PHP_UPLOAD_MAX_FILESIZE: ${PHP_UPLOAD_MAX_FILESIZE}
        PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE}
    container_name: ${APP_CONTAINER_NAME}
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
    volumes:
      - .:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - ${DOCKER_NETWORK}

  nginx:
    build:
      context: .
      dockerfile: .deploy/config/nginx.Dockerfile
    container_name: ${NGINX_CONTAINER_NAME}
    ports:
      - "${NGINX_PORT}:80"
      - "${NGINX_SSL_PORT}:443"
    volumes:
      - .:/var/www/html
    depends_on:
      - app
    networks:
      - ${DOCKER_NETWORK}

  db:
    image: mysql:8.0
    container_name: ${DB_CONTAINER_NAME}
    ports:
      - "${DB_EXTERNAL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
    volumes:
      - ${DB_VOLUME_NAME}:/var/lib/mysql
    networks:
      - ${DOCKER_NETWORK}

  redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME}
    volumes:
      - ${REDIS_VOLUME_NAME}:/data
    networks:
      - ${DOCKER_NETWORK}
    # Uncomment if Redis auth is used
    # command: redis-server --requirepass "${REDIS_PASSWORD}"

networks:
  ${DOCKER_NETWORK}:
    driver: bridge

volumes:
  ${DB_VOLUME_NAME}:
  ${REDIS_VOLUME_NAME}:
