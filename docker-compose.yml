version: '3.8'

services:
  # Servidor web Nginx - Actúa como proxy inverso
  nginx:
    build:
      context: .
      dockerfile: .deploy/nginx.Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - laravel-network
    restart: unless-stopped

  # Aplicación Laravel con PHP-FPM y Caddy
  app:
    build:
      context: .
      dockerfile: .deploy/app.Dockerfile
      args:
        - APP_ENV=${APP_ENV:-production}
    volumes:
      - ./:/var/www/html
      - ./storage/logs/php:/var/log/php
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL:-http://localhost}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-laravel}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
      - CADDY_PORT=${CADDY_PORT:-2019}
      - RUN_MIGRATIONS=${RUN_MIGRATIONS:-false}
    depends_on:
      - db
      - redis
    networks:
      - laravel-network
    restart: unless-stopped

  # Base de datos MySQL/MariaDB
  db:
    image: mariadb:10.11-jammy
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-laravel}
      - MYSQL_USER=${DB_USERNAME:-laravel}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root_secret}
    volumes:
      - db-data:/var/lib/mysql
      - ./.deploy/config/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - laravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para caché, colas y sesiones
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-null}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./.deploy/config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - laravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# Redes
networks:
  laravel-network:
    driver: bridge

# Volúmenes persistentes
volumes:
  db-data:
    driver: local
  redis-data:
    driver: local