version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: _deploy/app.Dockerfile
    container_name: ${APP_CONTAINER_NAME}
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./_deploy/config/php.ini:/usr/local/etc/php/php.ini
    environment:
      - APP_ENV=production
    depends_on:
      - ${DB_CONTAINER_NAME}
      - ${REDIS_CONTAINER_NAME}
    networks:
      - ${DOCKER_NETWORK}

  ${NGINX_CONTAINER_NAME}:
    build:
      context: .
      dockerfile: _deploy/nginx.Dockerfile
    container_name: ${NGINX_CONTAINER_NAME}
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - app
    volumes:
      - .:/var/www
      - ./_deploy/config/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - ${DOCKER_NETWORK}

  ${DB_CONTAINER_NAME}:
    image: mysql:8.0
    container_name: ${DB_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${DB_EXTERNAL_PORT}:3306"
    volumes:
      - ${DB_VOLUME_NAME}:/var/lib/mysql
    networks:
      - ${DOCKER_NETWORK}

  ${REDIS_CONTAINER_NAME}:
    image: redis:alpine
    container_name: ${REDIS_CONTAINER_NAME}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_VOLUME_NAME}:/data
    networks:
      - ${DOCKER_NETWORK}

networks:
  ${DOCKER_NETWORK}:
    driver: bridge

volumes:
  ${DB_VOLUME_NAME}:
  ${REDIS_VOLUME_NAME}: