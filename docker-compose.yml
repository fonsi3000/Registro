version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: .deploy/app.Dockerfile
      args:
        PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
        PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
        PHP_UPLOAD_MAX_FILESIZE: ${PHP_UPLOAD_MAX_FILESIZE}
        PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE}
    container_name: ${APP_CONTAINER_NAME}
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
    volumes:
      - .:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - ${DOCKER_NETWORK}

  nginx:
    build:
      context: .
      dockerfile: .deploy/nginx.Dockerfile
    container_name: ${NGINX_CONTAINER_NAME}
    ports:
      - "${NGINX_PORT}:80"
      - "${NGINX_SSL_PORT}:443" # ← Esto se mapea como 9043 en el .env
    volumes:
      - .:/var/www/html
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - app
    networks:
      - ${DOCKER_NETWORK}

  db:
    image: mysql:8.0
    container_name: ${DB_CONTAINER_NAME}
    ports:
      - "${DB_EXTERNAL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
    volumes:
      - registros_db_data:/var/lib/mysql
    networks:
      - ${DOCKER_NETWORK}

  redis:
    image: redis:7-alpine
    container_name: registros_redis
    ports:
      - "6380:6379"  # ← Mapeo externo para Redis sin interferencia
    networks:
      - ${DOCKER_NETWORK}

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - ${DOCKER_NETWORK}

networks:
  registros_network:
    driver: bridge

volumes:
  registros_db_data:
